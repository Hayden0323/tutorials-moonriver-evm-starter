type Account @entity {
  id: ID! # address
  transferCount: Int
  _transferCount: Int # all transfer
  in: [Transfer] @derivedFrom(field: "to") # all transfer-in record
  out: [Transfer] @derivedFrom(field: "from") # all tranfser-out record
  daily: [UserDailyReportGroup] @derivedFrom(field: "account") # user daily transfer reports
}

type Token @entity {
  id: ID! # contractAddress
  transferCount: Int # all user transfer count
  _transferCount: Int # all transfer count
  transfers: [Transfer] @derivedFrom(field: "token") # all transfers relate to `token`
  daily: [TokenDailyReport] @derivedFrom(field: "token") # the daily transfer reports
}

type Transfer @entity {
  id: ID!
  amount: BigInt
  token: Token!
  from: Account! # from account
  to: Account! # to account
  atBlock: BigInt!
  timestamp: Date!
}

type UserDailyReportGroup @entity {
  id: ID! # `account`-`timstamp`
  account: Account!
  transferCount: Int # count user daily transfer tx relate to `token`
  _transferCount: Int # count user daily transfer tx relate to `token`
  items: [UserDailyReport] @derivedFrom(field: "group")
  timestamp: Date!
}

type UserDailyReport @entity {
  id: ID! # `account`-`token`-`timestamp`
  group: UserDailyReportGroup
  account: Account!
  token: Token!
  transferCount: Int # count user daily transfer
  _transferCount: Int # count all daily transfer
  abs: BigInt # transfer amount abs
  in: BigInt # transfer in amount
  out: BigInt # transfer out amount
  volume: BigInt # total transfer volume
  timestamp: Date!
}

type TokenDailyReport @entity {
  id: ID! # `token`-`timestamp`
  token: Token!
  transferCount: Int # count token daily transfer
  _transferCount: Int # count all token daily transfer
  volume: BigInt # total tranfser volume
  timestamp: Date!
}
